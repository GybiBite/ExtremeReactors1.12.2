buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

ext.configFile = file "project.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod_version_major}.${config.mod_version_api}.${config.mod_version_minor}.${config.mod_version_patch}"
ext.api_version = "${config.mod_version_api}.${config.api_version_minor}.${config.api_version_patch}"
group = "${config.group_id}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExtremeReactors-${config.minecraft_version}"

ext.dependencies = "required-after:forge@[${config.forge_version_minDep},${config.forge_version_maxDep});required-after:zerocore@[${config.zerocore_version},${config.zerocore_version_max});after:computercraft;after:opencomputers@[${config.opencomputers_version_dep},)"
ext.fullVersion = project.config.minecraft_version + '-' + project.version

minecraft {
    version = "${config.forge_version}"

	if (file("../../run/run-${config.minecraft_version}").exists()) {
		runDir = "../../run/run-${config.minecraft_version}"
	} else {
		runDir = "run"
	}

    mappings = "${config.minecraft_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

configurations {
    deployerJars
}

repositories {

	maven {
        name "zerocore"
        url "https://maven.zerono.it/"
    }

    maven {
        name "Tesla"
        url 'https://maven.blamejared.com'
    }

    maven {
        name = "OpenComputers"
        url = "https://maven.cil.li/"
    }

    maven {
        name = "cc.tweaked"
        url "https://maven.squiddev.cc"
    }

    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
	}
}

dependencies {

    compile group: "it.zerono.mods.zerocore", name: "zerocore", version: "${config.zerocore_version}"
    deobfCompile group: "li.cil.oc", name: "OpenComputers", version: "${config.opencomputers_version}"
    compile "net.darkhax.tesla:Tesla-1.12.2:${config.tesla_version}"
    compile "dan200.computercraft:ComputerCraft:1.80pr0-build0" 
    compile "cofh:CoFHCore:${config.cofhcore_version}:deobf"
	deobfCompile "cofh:RedstoneFlux:1.12-2.1.0.7:universal"

    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}:api"
    // at runtime, use the full JEI jar
    //runtime "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"
}

processResources  {

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.ext.fullVersion
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {

        include 'mcmod.info'
        expand 'version':project.ext.fullVersion, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

compileJava.doFirst {

    File file;
    String source;

    file = new File(projectDir, 'build/sources/main/java/erogenousbeef/bigreactors/common/BigReactors.java')
    source = file.getText('UTF-8')
            .replaceAll('version = "0.0.0.0"', 'version = "' + project.ext.fullVersion + '"')
            .replaceAll('acceptedMinecraftVersions = ""', 'acceptedMinecraftVersions = "' + config.minecraft_version + '"')
            .replaceAll('dependencies = ".*"', 'dependencies = "' + project.ext.dependencies + '"')
    file.write(source, 'UTF-8')

    file = new File(projectDir, 'build/sources/main/java/erogenousbeef/bigreactors/api/package-info.java')
    source = file.getText('UTF-8').replaceAll('apiVersion = "0.0.0"', 'apiVersion = "' + project.ext.api_version + '"')
    file.write(source, 'UTF-8')

    // mod compat
    file = new File(projectDir, 'build/sources/main/java/erogenousbeef/bigreactors/common/compat/IdReference.java')
    source = file.getText('UTF-8')
            .replaceAll('"ComputerCraft"', '"' + config.compat_mod_computercraft_id + '"')
            .replaceAll('"OpenComputers"', '"' + config.compat_mod_opencomputers_id + '"')
            .replaceAll('"Mekanism"', '"' + config.compat_mod_mekanism_id + '"')
            .replaceAll('"thermalexpansion"', '"' + config.compat_mod_thermalexpansion_id + '"')
            .replaceAll('"MineFactoryReloaded"', '"' + config.compat_mod_minefactoryreloaded_id + '"')
            .replaceAll('"appliedenergistics2"', '"' + config.compat_mod_appliedenergistics2_id + '"')
    file.write(source, 'UTF-8')
}

task apiJar(type: Jar) {

    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'erogenousbeef/bigreactors/api/**/*'
    classifier = 'api'
}

artifacts {

    archives apiJar
}

uploadArchives {

    repositories {

        mavenDeployer {
            repository(url: "file://${project.projectDir}/output")
            pom.version = project.ext.fullVersion
            //jar.archiveName = 'ExtremeReactorsABC.jar'
            pom.artifactId = "${config.mod_id}"

        }
    }
}